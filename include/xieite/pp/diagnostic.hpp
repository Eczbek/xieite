#ifndef DETAIL_XIEITE_HEADER_PP_DIAGNOSTIC
#	define DETAIL_XIEITE_HEADER_PP_DIAGNOSTIC
#
#	include "../pp/compiler.hpp"
#	include "../pp/pragma.hpp"
#
#	define XIEITE_DIAGNOSTIC_MSG(_msg)
#	define XIEITE_DIAGNOSTIC_MSG_GCC(_msg)
#	define XIEITE_DIAGNOSTIC_MSG_CLANG(_msg)
#	define XIEITE_DIAGNOSTIC_MSG_MSVC(_msg)
#	define XIEITE_DIAGNOSTIC_WARN(_msg)
#	define XIEITE_DIAGNOSTIC_WARN_GCC(_msg)
#	define XIEITE_DIAGNOSTIC_WARN_CLANG(_msg)
#	define XIEITE_DIAGNOSTIC_WARN_MSVC(_msg)
#	define XIEITE_DIAGNOSTIC_ERROR(_msg)
#	define XIEITE_DIAGNOSTIC_ERROR_GCC(_msg)
#	define XIEITE_DIAGNOSTIC_ERROR_CLANG(_msg)
#	define XIEITE_DIAGNOSTIC_ERROR_MSVC(_msg)
#	define XIEITE_DIAGNOSTIC_PUSH()
#	define XIEITE_DIAGNOSTIC_PUSH_GCC()
#	define XIEITE_DIAGNOSTIC_PUSH_CLANG()
#	define XIEITE_DIAGNOSTIC_PUSH_MSVC()
#	define XIEITE_DIAGNOSTIC_POP()
#	define XIEITE_DIAGNOSTIC_POP_GCC()
#	define XIEITE_DIAGNOSTIC_POP_CLANG()
#	define XIEITE_DIAGNOSTIC_POP_MSVC()
#	define XIEITE_DIAGNOSTIC_ON_GCC(_id)
#	define XIEITE_DIAGNOSTIC_ON_CLANG(_id)
#	define XIEITE_DIAGNOSTIC_ON_MSVC(_id)
#	define XIEITE_DIAGNOSTIC_STRICT_GCC(_id)
#	define XIEITE_DIAGNOSTIC_STRICT_CLANG(_id)
#	define XIEITE_DIAGNOSTIC_STRICT_MSVC(_id)
#	define XIEITE_DIAGNOSTIC_OFF_GCC(_id)
#	define XIEITE_DIAGNOSTIC_OFF_CLANG(_id)
#	define XIEITE_DIAGNOSTIC_OFF_MSVC(_id)
#
#	if XIEITE_COMPILER_TYPE_MSVC
#		undef XIEITE_DIAGNOSTIC_MSG
#		define XIEITE_DIAGNOSTIC_MSG(_msg) XIEITE_PRAGMA(message(_msg))
#
#		undef XIEITE_DIAGNOSTIC_WARN
#		define XIEITE_DIAGNOSTIC_WARN(_msg) XIEITE_PRAGMA(message("\x1B[31m" _msg "\x1B[0m"))
#
#		undef XIEITE_DIAGNOSTIC_ERROR
#		define XIEITE_DIAGNOSTIC_ERROR(_msg) XIEITE_PRAGMA(message("\x1B[35m" _msg "\x1B[0m"))
#
#		undef XIEITE_DIAGNOSTIC_PUSH
#		define XIEITE_DIAGNOSTIC_PUSH() XIEITE_PRAGMA(warning(push))
#
#		undef XIEITE_DIAGNOSTIC_POP
#		define XIEITE_DIAGNOSTIC_POP() XIEITE_PRAGMA(warning(pop))
#	elif XIEITE_COMPILER_TYPE_CLANG
#		undef XIEITE_DIAGNOSTIC_MSG
#		define XIEITE_DIAGNOSTIC_MSG(_msg) XIEITE_PRAGMA(message _msg)
#
#		undef XIEITE_DIAGNOSTIC_WARN
#		define XIEITE_DIAGNOSTIC_WARN(_msg) XIEITE_PRAGMA(GCC warning _msg)
#
#		undef XIEITE_DIAGNOSTIC_ERROR
#		define XIEITE_DIAGNOSTIC_ERROR(_msg) XIEITE_PRAGMA(GCC error _msg)
#
#		undef XIEITE_DIAGNOSTIC_PUSH
#		define XIEITE_DIAGNOSTIC_PUSH() XIEITE_PRAGMA(clang diagnostic push)
#
#		undef XIEITE_DIAGNOSTIC_POP
#		define XIEITE_DIAGNOSTIC_POP() XIEITE_PRAGMA(clang diagnostic pop)
#	elif XIEITE_COMPILER_TYPE_GCC
#		undef XIEITE_DIAGNOSTIC_MSG
#		define XIEITE_DIAGNOSTIC_MSG(_msg) XIEITE_PRAGMA(message _msg)
#
#		undef XIEITE_DIAGNOSTIC_WARN
#		define XIEITE_DIAGNOSTIC_WARN(_msg) XIEITE_PRAGMA(GCC warning _msg)
#
#		undef XIEITE_DIAGNOSTIC_ERROR
#		define XIEITE_DIAGNOSTIC_ERROR(_msg) XIEITE_PRAGMA(GCC error _msg)
#
#		undef XIEITE_DIAGNOSTIC_PUSH
#		define XIEITE_DIAGNOSTIC_PUSH() XIEITE_PRAGMA(GCC diagnostic push)
#
#		undef XIEITE_DIAGNOSTIC_POP
#		define XIEITE_DIAGNOSTIC_POP() XIEITE_PRAGMA(GCC diagnostic pop)
#	endif
#
#	if XIEITE_COMPILER_TYPE_GCC
#		undef XIEITE_DIAGNOSTIC_MSG_GCC
#		define XIEITE_DIAGNOSTIC_MSG_GCC(_msg) XIEITE_DIAGNOSTIC_MSG(_msg)
#
#		undef XIEITE_DIAGNOSTIC_WARN_GCC
#		define XIEITE_DIAGNOSTIC_WARN_GCC(_msg) XIEITE_DIAGNOSTIC_WARN(_msg)
#
#		undef XIEITE_DIAGNOSTIC_ERROR_GCC
#		define XIEITE_DIAGNOSTIC_ERROR_GCC(_msg) XIEITE_DIAGNOSTIC_ERR(_msg)
#
#		undef XIEITE_DIAGNOSTIC_PUSH_GCC
#		define XIEITE_DIAGNOSTIC_PUSH_GCC() XIEITE_DIAGNOSTIC_PUSH()
#
#		undef XIEITE_DIAGNOSTIC_POP_GCC
#		define XIEITE_DIAGNOSTIC_POP_GCC() XIEITE_DIAGNOSTIC_POP()
#
#		undef XIEITE_DIAGNOSTIC_ON_GCC
#		define XIEITE_DIAGNOSTIC_ON_GCC(_id) XIEITE_PRAGMA(GCC diagnostic warning _id)
#
#		undef XIEITE_DIAGNOSTIC_STRICT_GCC
#		define XIEITE_DIAGNOSTIC_STRICT_GCC(_id) XIEITE_PRAGMA(GCC diagnostic error _id)
#
#		undef XIEITE_DIAGNOSTIC_OFF_GCC
#		define XIEITE_DIAGNOSTIC_OFF_GCC(_id) XIEITE_PRAGMA(GCC diagnostic ignored _id)
#	endif
#
#	if XIEITE_COMPILER_TYPE_CLANG
#		undef XIEITE_DIAGNOSTIC_MSG_CLANG
#		define XIEITE_DIAGNOSTIC_MSG_CLANG(_msg) XIEITE_DIAGNOSTIC_MSG(_msg)
#
#		undef XIEITE_DIAGNOSTIC_WARN_CLANG
#		define XIEITE_DIAGNOSTIC_WARN_CLANG(_msg) XIEITE_DIAGNOSTIC_WARN(_msg)
#
#		undef XIEITE_DIAGNOSTIC_ERROR_CLANG
#		define XIEITE_DIAGNOSTIC_ERROR_CLANG(_msg) XIEITE_DIAGNOSTIC_ERR(_msg)
#
#		undef XIEITE_DIAGNOSTIC_PUSH_CLANG
#		define XIEITE_DIAGNOSTIC_PUSH_CLANG() XIEITE_DIAGNOSTIC_PUSH()
#
#		undef XIEITE_DIAGNOSTIC_POP_CLANG
#		define XIEITE_DIAGNOSTIC_POP_CLANG() XIEITE_DIAGNOSTIC_POP()
#
#		undef XIEITE_DIAGNOSTIC_ON_CLANG
#		define XIEITE_DIAGNOSTIC_ON_CLANG(_id) XIEITE_PRAGMA(clang diagnostic warning _id)
#
#		undef XIEITE_DIAGNOSTIC_STRICT_CLANG
#		define XIEITE_DIAGNOSTIC_STRICT_CLANG(_id) XIEITE_PRAGMA(clang diagnostic error _id)
#
#		undef XIEITE_DIAGNOSTIC_OFF_CLANG
#		define XIEITE_DIAGNOSTIC_OFF_CLANG(_id) XIEITE_PRAGMA(clang diagnostic ignored _id)
#	endif
#
#	if XIEITE_COMPILER_TYPE_MSVC
#		undef XIEITE_DIAGNOSTIC_MSG_MSVC
#		define XIEITE_DIAGNOSTIC_MSG_MSVC(_msg) XIEITE_DIAGNOSTIC_MSG(_msg)
#
#		undef XIEITE_DIAGNOSTIC_WARN_MSVC
#		define XIEITE_DIAGNOSTIC_WARN_MSVC(_msg) XIEITE_DIAGNOSTIC_WARN(_msg)
#
#		undef XIEITE_DIAGNOSTIC_ERROR_MSVC
#		define XIEITE_DIAGNOSTIC_ERROR_MSVC(_msg) XIEITE_DIAGNOSTIC_ERR(_msg)
#
#		undef XIEITE_DIAGNOSTIC_PUSH_MSVC
#		define XIEITE_DIAGNOSTIC_PUSH_MSVC() XIEITE_DIAGNOSTIC_PUSH()
#
#		undef XIEITE_DIAGNOSTIC_POP_MSVC
#		define XIEITE_DIAGNOSTIC_POP_MSVC() XIEITE_DIAGNOSTIC_POP()
#
#		undef XIEITE_DIAGNOSTIC_ON_MSVC
#		define XIEITE_DIAGNOSTIC_ON_MSVC(_id) XIEITE_PRAGMA(warning(default: _id))
#
#		undef XIEITE_DIAGNOSTIC_STRICT_MSVC
#		define XIEITE_DIAGNOSTIC_STRICT_MSVC(_id) XIEITE_PRAGMA(warning(error: _id))
#
#		undef XIEITE_DIAGNOSTIC_OFF_MSVC
#		define XIEITE_DIAGNOSTIC_OFF_MSVC(_id) XIEITE_PRAGMA(warning(disable: _id))
#	endif
#endif

// https://learn.microsoft.com/en-us/cpp/error-messages/compiler-warnings/compiler-warnings-c4000-c5999
