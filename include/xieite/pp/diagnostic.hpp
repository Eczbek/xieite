#ifndef DETAIL_XIEITE_HEADER_PP_DIAGNOSTIC
#	define DETAIL_XIEITE_HEADER_PP_DIAGNOSTIC
#
#	include "../pp/compiler.hpp"
#	include "../pp/pragma.hpp"
#
#	define XIEITE_DIAGNOSTIC_MSG(msg)
#	define XIEITE_DIAGNOSTIC_MSG_GCC(msg)
#	define XIEITE_DIAGNOSTIC_MSG_CLANG(msg)
#	define XIEITE_DIAGNOSTIC_MSG_MSVC(msg)
#	define XIEITE_DIAGNOSTIC_WARN(msg)
#	define XIEITE_DIAGNOSTIC_WARN_GCC(msg)
#	define XIEITE_DIAGNOSTIC_WARN_CLANG(msg)
#	define XIEITE_DIAGNOSTIC_WARN_MSVC(msg)
#	define XIEITE_DIAGNOSTIC_ERR(msg)
#	define XIEITE_DIAGNOSTIC_ERR_GCC(msg)
#	define XIEITE_DIAGNOSTIC_ERR_CLANG(msg)
#	define XIEITE_DIAGNOSTIC_ERR_MSVC(msg)
#	define XIEITE_DIAGNOSTIC_PUSH()
#	define XIEITE_DIAGNOSTIC_PUSH_GCC()
#	define XIEITE_DIAGNOSTIC_PUSH_CLANG()
#	define XIEITE_DIAGNOSTIC_PUSH_MSVC()
#	define XIEITE_DIAGNOSTIC_POP()
#	define XIEITE_DIAGNOSTIC_POP_GCC()
#	define XIEITE_DIAGNOSTIC_POP_CLANG()
#	define XIEITE_DIAGNOSTIC_POP_MSVC()
#	define XIEITE_DIAGNOSTIC_ON_GCC(id)
#	define XIEITE_DIAGNOSTIC_ON_CLANG(id)
#	define XIEITE_DIAGNOSTIC_ON_MSVC(id)
#	define XIEITE_DIAGNOSTIC_STRICT_GCC(id)
#	define XIEITE_DIAGNOSTIC_STRICT_CLANG(id)
#	define XIEITE_DIAGNOSTIC_STRICT_MSVC(id)
#	define XIEITE_DIAGNOSTIC_OFF_GCC(id)
#	define XIEITE_DIAGNOSTIC_OFF_CLANG(id)
#	define XIEITE_DIAGNOSTIC_OFF_MSVC(id)
#
#	if XIEITE_COMPILER_TYPE_CLANG
#		undef XIEITE_DIAGNOSTIC_MSG
#		define XIEITE_DIAGNOSTIC_MSG(msg) XIEITE_PRAGMA(message msg)
#
#		undef XIEITE_DIAGNOSTIC_MSG_CLANG
#		define XIEITE_DIAGNOSTIC_MSG_CLANG(msg) XIEITE_DIAGNOSTIC_MSG(msg)
#
#		undef XIEITE_DIAGNOSTIC_WARN
#		define XIEITE_DIAGNOSTIC_WARN(msg) XIEITE_PRAGMA(GCC warning msg)
#
#		undef XIEITE_DIAGNOSTIC_WARN_CLANG
#		define XIEITE_DIAGNOSTIC_WARN_CLANG(msg) XIEITE_DIAGNOSTIC_WARN(msg)
#
#		undef XIEITE_DIAGNOSTIC_ERR
#		define XIEITE_DIAGNOSTIC_ERR(msg) XIEITE_PRAGMA(GCC error msg)
#
#		undef XIEITE_DIAGNOSTIC_ERR_CLANG
#		define XIEITE_DIAGNOSTIC_ERR_CLANG(msg) XIEITE_DIAGNOSTIC_ERR(msg)
#
#		undef XIEITE_DIAGNOSTIC_PUSH
#		define XIEITE_DIAGNOSTIC_PUSH() XIEITE_PRAGMA(clang diagnostic push)
#
#		undef XIEITE_DIAGNOSTIC_PUSH_CLANG
#		define XIEITE_DIAGNOSTIC_PUSH_CLANG() XIEITE_DIAGNOSTIC_PUSH()
#
#		undef XIEITE_DIAGNOSTIC_POP
#		define XIEITE_DIAGNOSTIC_POP() XIEITE_PRAGMA(clang diagnostic pop)
#
#		undef XIEITE_DIAGNOSTIC_POP_CLANG
#		define XIEITE_DIAGNOSTIC_POP_CLANG() XIEITE_DIAGNOSTIC_POP()
#
#		undef XIEITE_DIAGNOSTIC_ON_CLANG
#		define XIEITE_DIAGNOSTIC_ON_CLANG(id) XIEITE_PRAGMA(clang diagnostic warning id)
#
#		undef XIEITE_DIAGNOSTIC_STRICT_CLANG
#		define XIEITE_DIAGNOSTIC_STRICT_CLANG(id) XIEITE_PRAGMA(clang diagnostic error id)
#
#		undef XIEITE_DIAGNOSTIC_OFF_CLANG
#		define XIEITE_DIAGNOSTIC_OFF_CLANG(id) XIEITE_PRAGMA(clang diagnostic ignored id)
#	elif XIEITE_COMPILER_TYPE_GCC
#		undef XIEITE_DIAGNOSTIC_MSG
#		define XIEITE_DIAGNOSTIC_MSG(msg) XIEITE_PRAGMA(message msg)
#
#		undef XIEITE_DIAGNOSTIC_MSG_GCC
#		define XIEITE_DIAGNOSTIC_MSG_GCC(msg) XIEITE_DIAGNOSTIC_MSG(msg)
#
#		undef XIEITE_DIAGNOSTIC_WARN
#		define XIEITE_DIAGNOSTIC_WARN(msg) XIEITE_PRAGMA(GCC warning msg)
#
#		undef XIEITE_DIAGNOSTIC_WARN_GCC
#		define XIEITE_DIAGNOSTIC_WARN_GCC(msg) XIEITE_DIAGNOSTIC_WARN(msg)
#
#		undef XIEITE_DIAGNOSTIC_ERR
#		define XIEITE_DIAGNOSTIC_ERR(msg) XIEITE_PRAGMA(GCC error msg)
#
#		undef XIEITE_DIAGNOSTIC_ERR_GCC
#		define XIEITE_DIAGNOSTIC_ERR_GCC(msg) XIEITE_DIAGNOSTIC_ERR(msg)
#
#		undef XIEITE_DIAGNOSTIC_PUSH
#		define XIEITE_DIAGNOSTIC_PUSH() XIEITE_PRAGMA(GCC diagnostic push)
#
#		undef XIEITE_DIAGNOSTIC_PUSH_GCC
#		define XIEITE_DIAGNOSTIC_PUSH_GCC() XIEITE_DIAGNOSTIC_PUSH()
#
#		undef XIEITE_DIAGNOSTIC_POP
#		define XIEITE_DIAGNOSTIC_POP() XIEITE_PRAGMA(GCC diagnostic pop)
#
#		undef XIEITE_DIAGNOSTIC_POP_GCC
#		define XIEITE_DIAGNOSTIC_POP_GCC() XIEITE_DIAGNOSTIC_POP()
#
#		undef XIEITE_DIAGNOSTIC_ON_GCC
#		define XIEITE_DIAGNOSTIC_ON_GCC(id) XIEITE_PRAGMA(GCC diagnostic warning id)
#
#		undef XIEITE_DIAGNOSTIC_STRICT_GCC
#		define XIEITE_DIAGNOSTIC_STRICT_GCC(id) XIEITE_PRAGMA(GCC diagnostic error id)
#
#		undef XIEITE_DIAGNOSTIC_OFF_GCC
#		define XIEITE_DIAGNOSTIC_OFF_GCC(id) XIEITE_PRAGMA(GCC diagnostic ignored id)
#	elif XIEITE_COMPILER_TYPE_MSVC
#		undef XIEITE_DIAGNOSTIC_MSG
#		define XIEITE_DIAGNOSTIC_MSG(msg) XIEITE_PRAGMA(message(msg))
#
#		undef XIEITE_DIAGNOSTIC_MSG_MSVC
#		define XIEITE_DIAGNOSTIC_MSG_MSVC(msg) XIEITE_DIAGNOSTIC_MSG(msg)
#
#		undef XIEITE_DIAGNOSTIC_WARN
#		define XIEITE_DIAGNOSTIC_WARN(msg) XIEITE_PRAGMA(message("\x1B[31m" msg "\x1B[0m"))
#
#		undef XIEITE_DIAGNOSTIC_WARN_MSVC
#		define XIEITE_DIAGNOSTIC_WARN_MSVC(msg) XIEITE_DIAGNOSTIC_WARN(msg)
#
#		undef XIEITE_DIAGNOSTIC_ERR
#		define XIEITE_DIAGNOSTIC_ERR(msg) XIEITE_PRAGMA(message("\x1B[35m" msg "\x1B[0m"))
#
#		undef XIEITE_DIAGNOSTIC_ERR_MSVC
#		define XIEITE_DIAGNOSTIC_ERR_MSVC(msg) XIEITE_DIAGNOSTIC_ERR(msg)
#
#		undef XIEITE_DIAGNOSTIC_PUSH
#		define XIEITE_DIAGNOSTIC_PUSH() XIEITE_PRAGMA(warning(push))
#
#		undef XIEITE_DIAGNOSTIC_PUSH_MSVC
#		define XIEITE_DIAGNOSTIC_PUSH_MSVC() XIEITE_DIAGNOSTIC_PUSH()
#
#		undef XIEITE_DIAGNOSTIC_POP
#		define XIEITE_DIAGNOSTIC_POP() XIEITE_PRAGMA(warning(pop))
#
#		undef XIEITE_DIAGNOSTIC_POP_MSVC
#		define XIEITE_DIAGNOSTIC_POP_MSVC() XIEITE_DIAGNOSTIC_POP()
#
#		undef XIEITE_DIAGNOSTIC_ON_MSVC
#		define XIEITE_DIAGNOSTIC_ON_MSVC(id) XIEITE_PRAGMA(warning(default: id))
#
#		undef XIEITE_DIAGNOSTIC_STRICT_MSVC
#		define XIEITE_DIAGNOSTIC_STRICT_MSVC(id) XIEITE_PRAGMA(warning(error: id))
#
#		undef XIEITE_DIAGNOSTIC_OFF_MSVC
#		define XIEITE_DIAGNOSTIC_OFF_MSVC(id) XIEITE_PRAGMA(warning(disable: id))
#	endif
#endif

// https://learn.microsoft.com/en-us/cpp/error-messages/compiler-warnings/compiler-warnings-c4000-c5999
